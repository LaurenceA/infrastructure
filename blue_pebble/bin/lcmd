#!/usr/bin/env python3

import sys
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--cpus',    '-c', type=int, nargs='?', default=1)
parser.add_argument('--gpus',    '-g', type=int, nargs='?')
parser.add_argument('--hours',   '-t', type=int, nargs='?', default=1,  help="time in hours")
parser.add_argument('--mins',          type=int, nargs='?', default=0,  help="time in mins")
parser.add_argument('--memory',  '-m', type=int, nargs='?', default=22, help="memory in gp")
parser.add_argument('--queue',   '-q', type=str, nargs='?',             help="queue")
parser.add_argument('--gputype',       type=str, nargs='?'             )#choices=["GTX1080", "RTX2080", "RTX2080Ti", "RTX3090"], help="{GTX1080, RTX2080, RTX2080Ti, RTX3090}")
parser.add_argument('--venv',          type=str, nargs='?')
parser.add_argument('--cmd',           type=str, nargs='?',             help="job command --- must be last argument")
parser.add_argument('--autoname', action='store_true',                   help="extract output filename based on job --- always uses third argument after --cmd, as in --cmd python file.py output_filename")

# remove args after --cmd, if present
if "--cmd" in arglist:
    cmd_idx = arglist.index('--cmd')
    arglist = sys.argv[1:cmd_idx]
else:
    arglist = sys.argv[1:]
args = parser.parse_args(arglist)

cmd = ""

days = args.hours//24
hours = args.hours % 24
cmd = cmd + f" --time={days}-{hours}:00:00"
cmd = cmd + f" --cpus-per-task={args.cpus}"

if args.memory is not None:
    cmd = cmd + f" --mem={args.memory}G"

if args.queue is not None:
    cmd = cmd + f" --partition {args.queue}"

if args.gpus is not None:
    if args.gputype is not None:
        cmd = cmd + f" --gpus={args.gputype}:{args.gpus}"
    else:
        cmd = cmd + f" --gpus={args.gpus}"

print(cmd)
