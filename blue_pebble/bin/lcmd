#!/usr/bin/env python3

import sys
import argparse

gpu_mems = [11, 24, 40, 80]
gpu_nodes = {
    11 : ["bp1-gpu004", "bp1-gpu006", "bp1-gpu016", "bp1-gpu017"],
    24 : ["bp1-gpu029"],
    40 : ["bp1-gpu031", "bp1-gpu032"],
    80 : ["bp1-gpu038", "bp1-gpu039"],
}

parser = argparse.ArgumentParser()
parser.add_argument('--cpus',    '-c', type=int, nargs='?', default=1)
parser.add_argument('--gpus',    '-g', type=int, nargs='?')
parser.add_argument('--hours',   '-t', type=int, nargs='?', default=1,  help="time in hours")
parser.add_argument('--mins',          type=int, nargs='?', default=0,  help="time in mins")
parser.add_argument('--memory',  '-m', type=int, nargs='?', default=22, help="memory in gp")
parser.add_argument('--queue',   '-q', type=str, nargs='?',             help="queue")
parser.add_argument('--gpumem',        type=int, nargs='*', choices=gpu_mems)

# remove args after --cmd, if present
if "--cmd" in sys.argv:
    cmd_idx = sys.argv.index('--cmd')
    arglist = sys.argv[1:cmd_idx]
else:
    arglist = sys.argv[1:]
args,_ = parser.parse_known_args(arglist)

cmd = ""

days = args.hours//24
hours = args.hours % 24
cmd = cmd + f" --time={days}-{hours}:00:00"
cmd = cmd + f" --cpus-per-task={args.cpus}"

if args.memory is not None:
    cmd = cmd + f" --mem={args.memory}G"

if args.queue is not None:
    cmd = cmd + f" --partition {args.queue}"

if args.gpus is not None:
    #if args.gputype is not None:
    #    cmd = cmd + f" --gpus={args.gputype}:{args.gpus}"
    #else:
    cmd = cmd + f" --gpus={args.gpus}"

if args.gpumem is not None:
    exclude_mem = set(gpu_mems) - set(args.gpumem)    
    exclude_nodes_list_list = [gpu_nodes[mem] for mem in exclude_mem]
    exclude_nodes = [y for x in exclude_nodes_list_list for y in x]
    exclude_nodes_str = ",".join(exclude_nodes)
    
    cmd = cmd + f" --exclude={exclude_nodes_str}"

print(cmd)
